; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.42 

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	___DoXorSSE
; Function compile flags: /Odtp
_TEXT	SEGMENT
_dwKey$ = 8						; size = 4
_pBuff$ = 12						; size = 4
_nSSELen$ = 16						; size = 4
___DoXorSSE PROC
; File z:\works\duilib\suicore\trunk\src\base\tools\sse64.cpp
; Line 7
	push	rbp
	mov	rbp, rsp
	
	push rcx
    push rax
    
    movaps xmm1, [_dwKey$]
    shufps xmm1, xmm1, 0
    mov	rax, [_pBuff$]
    mov rcx, [_nSSELen$]		
xor_process:
    movups xmm0, [rax]
    xorps xmm0, xmm1
    movups [rax], xmm0
    add rax, 10h
    dec rcx
    jnz xor_process
    pop rax
    pop rcx
    emms
    
; Line 8
	pop	rbp
	ret	0
___DoXorSSE ENDP
_TEXT	ENDS
PUBLIC	___MemCopySSE
; Function compile flags: /Odtp
_TEXT	SEGMENT
_pDest$ = 8						; size = 4
_pSrc$ = 12						; size = 4
_nSSESize$ = 16						; size = 4
___MemCopySSE PROC
; Line 11
	push	rbp
	mov	rbp, rsp
	
	; begin code
	push rcx
    push rdx
    push rax
    mov	rax, [_pSrc$]
    mov rdx, [_pDest$]
    mov rcx, [_nSSESize$]		
memcpy_process:
    movups xmm0, [rax]
    add rax, 10h
    movups [rdx], xmm0
    add rdx, 10h
    dec rcx
    jnz memcpy_process
    pop rax
    pop rdx
    pop rcx
    emms
    
; Line 12
	pop	rbp
	ret	0
___MemCopySSE ENDP
_TEXT	ENDS
PUBLIC	___MemSetDWordSSE
; Function compile flags: /Odtp
_TEXT	SEGMENT
_pBuff$ = 8						; size = 4
_dwVal$ = 12						; size = 4
_nSSESize$ = 16						; size = 4
___MemSetDWordSSE PROC
; Line 15
	push	rbp
	mov	rbp, rsp
	
	push rcx
    push rax
    movaps xmm1, [_dwVal$]
    shufps xmm1, xmm1, 0
    mov	rax, [_pBuff$]
    mov rcx, [_nSSESize$]		
xor_process:
    movups [rax], xmm1
    add rax, 10h
    dec rcx
    jnz xor_process
    pop rax
    pop rcx
    emms
    
; Line 16
	pop	rbp
	ret	0
___MemSetDWordSSE ENDP
_TEXT	ENDS
PUBLIC	___DoGraySSE
; Function compile flags: /Odtp
_TEXT	SEGMENT
_dwDiv3$ = -8						; size = 4
_dwMask$ = -4						; size = 4
_pBuff$ = 8						; size = 4
_nSSESize$ = 12						; size = 4
___DoGraySSE PROC
; Line 19
	push	rbp
	mov	rbp, rsp
	sub	rsp, 8
; Line 20
	mov	DWORD PTR _dwMask$[rbp], 255		; 000000ffH
; Line 21
	mov	DWORD PTR _dwDiv3$[rbp], 85		; 00000055H
; Line 22
	mov	rsp, rbp
	
	push rcx
    push rax
    mov rcx, [_nSSESize$]
      
    movaps xmm1, [_dwMask$]
    shufps xmm1, xmm1, 0
    movaps xmm2, [_dwDiv3$]
    shufps xmm2, xmm2, 0
    movaps xmm3, xmm1
    pslld xmm3, 24
    mov	rax, [_pBuff$]			
gray_process:
    movups xmm0, [rax]
    movaps xmm4, xmm0
    movaps xmm5, xmm0
    movaps xmm6, xmm0
    andps xmm4, xmm1
    psrld xmm5, 8
    andps xmm5, xmm1
    psrld xmm6, 16
    andps xmm6, xmm1
    paddd xmm4, xmm5
    paddd xmm4, xmm6
    pmullw xmm4, xmm2
    psrld xmm4, 8
    movaps xmm5, xmm4
    pslld xmm5, 8
    orps xmm4, xmm5
    pslld xmm5, 8
    orps xmm4, xmm5
    andps xmm0, xmm3
    orps xmm0, xmm4
    movups [rax], xmm0
    add rax, 10h
    dec rcx
    jnz gray_process
    pop rax
    pop rcx
    emms
    
	pop	rbp
	ret	0
___DoGraySSE ENDP
_TEXT	ENDS
PUBLIC	___OpenAlphaSSE
; Function compile flags: /Odtp
_TEXT	SEGMENT
_dwMask$ = -4						; size = 4
_pBuff$ = 8						; size = 4
_nSizeSSE$ = 12						; size = 4
___OpenAlphaSSE PROC
; Line 26
	push	rbp
	mov	rbp, rsp
	push	rcx
; Line 27
	mov	DWORD PTR _dwMask$[rbp], -16777216	; ff000000H
; Line 28
	mov	rsp, rbp
	
	push rax
    push rcx
    movaps xmm1, [_dwMask$]
    shufps xmm1, xmm1, 0	;0xff00000000¼Ä´æ
    xorps xmm3, xmm3		;0¼Ä´æ
    mov rax, [_pBuff$]
    mov rcx, [_nSizeSSE$]
open_alpha:
    movups xmm0, [rax]
    movaps xmm2, xmm0
    andps xmm2, xmm1
    pcmpeqd xmm2, xmm3
    andps xmm0, xmm2
    andps xmm2, xmm1
    orps xmm0, xmm2
    movups [rax], xmm0
    add rax, 10h
    dec rcx
    jnz open_alpha
    pop rcx
    pop rax
    emms
    
	pop	rbp
	ret	0
___OpenAlphaSSE ENDP
_TEXT	ENDS
PUBLIC	___SetColorKeySSE
; Function compile flags: /Odtp
_TEXT	SEGMENT
_dwMask$ = -4						; size = 4
_pBuff$ = 8						; size = 4
_nSSESize$ = 12						; size = 4
_dwColor$ = 16						; size = 4
___SetColorKeySSE PROC
; Line 31
	push	rbp
	mov	rbp, rsp
	push	rcx
; Line 32
	mov	DWORD PTR _dwMask$[rbp], 16777215	; 00ffffffH
; Line 33
	mov	rsp, rbp
	
	push rax
    push rcx
    movaps xmm1, [_dwColor$]
    shufps xmm1, xmm1, 0
    movaps xmm3, [_dwMask$]
    shufps xmm3, xmm3, 0
    mov rax, [_pBuff$]
    mov rcx, [_nSSESize$]
color_key:
    movups xmm0, [rax]
    movaps xmm2, xmm0
    andps xmm2, xmm3
    pcmpeqd xmm2, xmm1
    pandn xmm2, xmm0
    movups [rax], xmm2
    add rax, 10h
    dec rcx
    jnz color_key
    pop rcx
    pop rax
    emms
    
	pop	rbp
	ret	0
___SetColorKeySSE ENDP
_TEXT	ENDS
PUBLIC	___DoOrSSE
; Function compile flags: /Odtp
_TEXT	SEGMENT
_dwKey$ = 8						; size = 4
_pBuff$ = 12						; size = 4
_nSSELen$ = 16						; size = 4
___DoOrSSE PROC
; Line 37
	push	rbp
	mov	rbp, rsp
	
	push rcx
    push rax
    movaps xmm1, [_dwKey$]
    shufps xmm1, xmm1, 0
    mov	rax, [_pBuff$]
    mov rcx, [_nSSELen$]		
xor_process:
    movups xmm0, [rax]
    orps xmm0, xmm1
    movups [rax], xmm0
    add rax, 10h
    dec rcx
    jnz xor_process
    pop rax
    pop rcx
    emms
    
; Line 38
	pop	rbp
	ret	0
___DoOrSSE ENDP
_TEXT	ENDS
PUBLIC	___DoAndSSE
; Function compile flags: /Odtp
_TEXT	SEGMENT
_dwKey$ = 8						; size = 4
_pBuff$ = 12						; size = 4
_nSSELen$ = 16						; size = 4
___DoAndSSE PROC
; Line 41
	push	rbp
	mov	rbp, rsp
	
	push rcx
    push rax
    movaps xmm1, [_dwKey$]
    shufps xmm1, xmm1, 0
    mov	rax, [_pBuff$]
    mov rcx, [_nSSELen$]		
and_process:
    movups xmm0, [rax]
    andps xmm0, xmm1
    movups [rax], xmm0
    add rax, 10h
    dec rcx
    jnz and_process
    pop rax
    pop rcx
    emms
    
; Line 42
	pop	rbp
	ret	0
___DoAndSSE ENDP
_TEXT	ENDS
END
